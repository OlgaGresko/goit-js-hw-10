{"mappings":"YAEA,IAAMA,EAAW,gCACXC,EAAU,CACZ,YAAa,yEAgBjB,SAASC,EAAgBC,GACrB,OAAOC,MAAM,GAAsCC,OAAnCL,EAAS,4BAAkCK,OAARF,GAAWF,GACzDK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACV,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,O,ICxBxC,IAIIC,EAJEC,EAAWC,SAASC,cAAc,iBAClCC,EAAYF,SAASC,cAAc,aACnCE,EAAWH,SAASC,cAAc,WAClCG,EAAUJ,SAASC,cAAc,UAGvC,SAASI,IAAe,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACpBF,EAASG,SAAQ,SAAAC,GACbA,EAAQC,UAAUC,OAAO,S,IA8DjCV,EAAeF,EAAUC,GAEzBY,OAAOC,iBAAiB,QA/CxB,WACIZ,EAAeN,EAAUI,GDnBlBb,MAAM,GAAYC,OAATL,EAAS,UAASC,GAC7BK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACV,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAMH,EAASI,O,ICiBnCL,MAAK,SAAA0B,GAjBV,IACQC,EAmBA,OAnBAA,GAiBArB,EAASoB,GAjBWE,KAAI,SAAAC,G,MACxB,kBAA+B9B,OAAb8B,EAAMC,GAAG,MAAe/B,OAAX8B,EAAME,KAAK,Y,IACzCC,OACLzB,EAAS0B,UAAYN,EAgBVrB,C,IAEVN,MAAK,WACFa,EAAeF,EAAUJ,E,IAE5B2B,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAMG,SAClBzB,EAAeF,EAAUC,E,OAkCjCL,EAASkB,iBAAiB,UA9B1B,SAAoBc,GAKhB,GAJK3B,EAAQU,UAAUkB,SAAS,WAC5B3B,EAAeD,IAGU,IAAzB2B,EAAME,OAAOC,QAAjB,CAIA,IAAI7C,EAAU0C,EAAME,OAAOE,MAC3B9B,EAAeF,GAEff,EAAgBC,GACfG,MAAK,SAAA4C,IArCV,SAA0BA,EAAU/C,GAChCa,EAAUuB,UAAY,aAA6BlC,OAAhB6C,EAAS,GAAGC,IAAI,qCAC/C,IAAIC,EAAQxC,EAAOyC,MAAK,SAAAlB,G,OAASA,EAAMC,KAAOjC,C,IAC9Ca,EAAUsC,mBAAmB,YAAa,YAAiCjD,OAArB+C,EAAMf,KAAK,YAA+DhC,OAArD+C,EAAMG,YAAY,qCAAqDlD,OAAlB+C,EAAMI,YAAY,c,CAmClJC,CAAiBP,EAAU/C,E,IAE9BG,MAAK,WACFa,EAAeF,E,IAElBuB,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAMG,SAClBzB,EAAeF,EAAUC,GACzBF,EAAUuB,UAAU,E,GAhBpB,C","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["export { fetchBreeds, fetchCatByBreed };\n\nconst BASE_URL = 'https://api.thecatapi.com/v1/';\nconst options = {\n    'x-api-key': 'live_lb7yb9rC7It7pKgmQJDhKTieyjB4XFV8D4jl997rT2RpXg7fuM1AZ2T8PHUPk6vG',\n\n}\n\nfunction fetchBreeds() {\n    return fetch(`${BASE_URL}breeds`, options)\n        .then(response => {\n            if (response.ok) {\n               return response.json(); \n            } else {\n               throw new Error(response.status);\n            }\n        })\n}\n\n\nfunction fetchCatByBreed(breedId) {\n    return fetch(`${BASE_URL}images/search?breed_ids=${breedId}`, options)\n        .then(response => {\n            if (response.ok) {\n               return response.json();\n            } else {\n               throw new Error(response.status);\n            }\n        })\n}\n","import { fetchBreeds, fetchCatByBreed } from \"./cat-api\"\n\nconst selectEl = document.querySelector(\".breed-select\");\nconst catInfoEl = document.querySelector(\".cat-info\");\nconst loaderEl = document.querySelector(\".loader\");\nconst errorEl = document.querySelector(\".error\");\nlet breeds;\n\nfunction togglingHidden(...elements) {\n    elements.forEach(element => {\n        element.classList.toggle('hidden');\n    })\n}\n\nfunction createBreedsMarkup() {\n    let breedsList = breeds.map(breed => \n        `<option value=\"${breed.id}\">${breed.name}</option>`)\n        .join();\n    selectEl.innerHTML = breedsList;\n}\n\nfunction createCardMarkup(breedImg, breedId) {\n    catInfoEl.innerHTML = `<img src=\"${breedImg[0].url}\" height=\"450px\" alt=\"Cat\"></img>`;\n        let breed = breeds.find(breed => breed.id === breedId);\n        catInfoEl.insertAdjacentHTML('beforeend', `<div><h1>${breed.name}</h1><p>${breed.description}</p><p><span>Temperament: </span>${breed.temperament}</p></div>`);\n}\n\nfunction createList() {\n    togglingHidden(selectEl, loaderEl);\n           \n    fetchBreeds()\n    .then(result => {\n        breeds = result;\n        createBreedsMarkup();\n        return breeds;\n        })\n    .then(() => {\n        togglingHidden(loaderEl, selectEl);\n    })\n    .catch((error) => {\n        console.log(error.message);\n        togglingHidden(loaderEl, errorEl);\n    });  \n}\n\nfunction createCard(event) { \n    if (!errorEl.classList.contains('hidden')) {\n        togglingHidden(errorEl);\n    }\n \n    if (event.target.tagName === !'OPTION') {\n        return;\n    } \n\n    let breedId = event.target.value; \n    togglingHidden(loaderEl);\n               \n    fetchCatByBreed(breedId)\n    .then(breedImg => {\n        createCardMarkup(breedImg, breedId);\n    })\n    .then(() => {\n        togglingHidden(loaderEl);\n    })\n    .catch((error) => {\n        console.log(error.message);\n        togglingHidden(loaderEl, errorEl);\n        catInfoEl.innerHTML='';\n    }\n    );    \n}\n\ntogglingHidden(loaderEl, errorEl);\n\nwindow.addEventListener('load', createList);\nselectEl.addEventListener('change', createCard);\n\n\n\n"],"names":["$ae0c329fb0fb36dc$var$BASE_URL","$ae0c329fb0fb36dc$var$options","$ae0c329fb0fb36dc$export$57b7d3a597416aa2","breedId","fetch","concat","then","response","ok","json","Error","status","$b8f9b7833fa37166$var$breeds","$b8f9b7833fa37166$var$selectEl","document","querySelector","$b8f9b7833fa37166$var$catInfoEl","$b8f9b7833fa37166$var$loaderEl","$b8f9b7833fa37166$var$errorEl","$b8f9b7833fa37166$var$togglingHidden","_len","arguments","length","elements","Array","_key","forEach","element","classList","toggle","window","addEventListener","result","breedsList","map","breed","id","name","join","innerHTML","catch","error","console","log","message","event","contains","target","tagName","value","breedImg","url","breed1","find","insertAdjacentHTML","description","temperament","$b8f9b7833fa37166$var$createCardMarkup"],"version":3,"file":"index.0099d3d3.js.map"}